version: 0.2

phases:
  install:
    commands:
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    run-as: root
    commands:
      - echo "Agent is ready"
      - aws --version
      - export KUBECONFIG=$HOME/.kube/config
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 160743850946.dkr.ecr.us-east-2.amazonaws.com
  build:
    run-as: root
    commands:
      - cd $CODEBUILD_SRC_DIR
      - echo 'Building image...'
      - >
        docker build
        -t 160743850946.dkr.ecr.us-east-2.amazonaws.com/frontend-client-repo:$ENVIRONMENT-$CODEBUILD_BUILD_NUMBER
        -t 160743850946.dkr.ecr.us-east-2.amazonaws.com/frontend-client-repo:$ENVIRONMENT-latest
        --build-arg REACT_APP_STAGE=$ENVIRONMENT
        --build-arg REACT_APP_AWS_ACCESS_KEY=$REACT_APP_AWS_ACCESS_KEY
        --build-arg REACT_APP_AWS_SECRET_KEY=$REACT_APP_AWS_SECRET_KEY
        --build-arg REACT_APP_GOOGLE_ID=$REACT_APP_GOOGLE_ID
        --build-arg REACT_APP_FB_PIXEL_ID=$REACT_APP_FB_PIXEL_ID
        --build-arg REACT_APP_MIGO_API=$REACT_APP_MIGO_API .
      - echo 'Pushing image into ECR...'
      - docker push 160743850946.dkr.ecr.us-east-2.amazonaws.com/frontend-client-repo --all-tags
  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - cd $CODEBUILD_SRC_DIR/deploy/$K8S_CLUSTER
      - envsubst < deployment.template > deployment.yaml
      - cat deployment.yaml
      - rm deployment.template
      - aws eks update-kubeconfig --region us-east-2 --name $K8S_CLUSTER 
      - kubectl apply -f . -n $K8S_NAMESPACE


